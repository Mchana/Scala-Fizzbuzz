[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""/tmp/idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""/tmp/idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.1 (Eclipse Adoptium Java 17.0.11)
[debug] Load.defaultLoad until apply took 311.634662ms
[debug]           Load.loadUnit: plugins took 209.843146ms
[debug]           Load.loadUnit: defsScala took 0.862204ms
[debug] [Loading] Scanning directory /home/mchana/scala-course/FizzBuzz/project
[debug]             Load.loadUnit: mkEval took 11.967268ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/mchana/scala-course/FizzBuzz/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 40.769695 ms
[info] loading settings for project fizzbuzz-build from idea.sbt ...
[debug]               Load.resolveProject(fizzbuzz-build) took 148.793158ms
[debug]             Load.loadTransitive: finalizeProject(Project(id fizzbuzz-build, base: /home/mchana/scala-course/FizzBuzz/project, plugins: List(<none>))) took 211.019071ms
[debug] [Loading] Done in /home/mchana/scala-course/FizzBuzz/project, returning: (fizzbuzz-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 7610.220954ms
[debug]           Load.loadUnit: cleanEvalClasses took 54.27276ms
[debug]         Load.loadUnit(file:/home/mchana/scala-course/FizzBuzz/project/, ...) took 7892.350465ms
[debug]       Load.apply: load took 8336.837585ms
[debug]       Load.apply: resolveProjects took 20.89081ms
[debug]       Load.apply: finalTransforms took 124.913919ms
[debug]       Load.apply: config.delegates took 17.530512ms
[debug]       Load.apply: Def.make(settings)... took 1125.878033ms
[debug]       Load.apply: structureIndex took 241.565055ms
[debug]       Load.apply: mkStreams took 2.303002ms
[info] loading project definition from /home/mchana/scala-course/FizzBuzz/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 12386.543383ms
[debug]     Load.loadUnit: defsScala took 0.026ms
[debug] [Loading] Scanning directory /home/mchana/scala-course/FizzBuzz
[debug]       Load.loadUnit: mkEval took 0.329445ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.436132 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 38.713878ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: /home/mchana/scala-course/FizzBuzz, plugins: List(<none>))) took 46.18618ms
[debug] [Loading] Done in /home/mchana/scala-course/FizzBuzz, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 3280.421054ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.761522ms
[debug]   Load.loadUnit(file:/home/mchana/scala-course/FizzBuzz/, ...) took 15674.764739ms
[debug] Load.apply: load took 15744.52001ms
[debug] Load.apply: resolveProjects took 0.268815ms
[debug] Load.apply: finalTransforms took 54.575592ms
[debug] Load.apply: config.delegates took 0.951815ms
[debug] Load.apply: Def.make(settings)... took 229.152175ms
[debug] Load.apply: structureIndex took 123.013158ms
[debug] Load.apply: mkStreams took 0.004482ms
[info] set current project to FizzBuzz (in build file:/home/mchana/scala-course/FizzBuzz/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 42137 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 42137, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to FizzBuzz (in build file:/home/mchana/scala-course/FizzBuzz/)
[debug] > Exec(idea-shell, None, None)
